name: Pyinstaller Build on Ubuntu for GNU/Linux x86_64
on:
  release:
    types: ["published"]
  push:
    branches: ["develop", "trunk"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: autoconf build-essential pkg-config yasm zlib1g-dev
        version: 1.0

    - name: Build FFmpeg from source (git submodule)
      run: |
        mkdir ~/ffmpeg_build/ ~/bin/
        cd FFmpeg-6.1.1
        PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
          --prefix="$HOME/ffmpeg_build" \
          --pkg-config-flags="--static" \
          --extra-cflags="-I$HOME/ffmpeg_build/include" \
          --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
          --extra-libs="-lpthread -lm" \
          --ld="g++" \
          --bindir="$HOME/bin" \
          --disable-doc \
          --disable-htmlpages \
          --disable-podpages \
          --disable-txtpages \
          --disable-network \
          --disable-autodetect \
          --disable-hwaccels \
          --disable-ffprobe \
          --disable-ffplay \
          --disable-encoder=adpcm* \
          --disable-encoder=av1* \
          --disable-encoder=hevc* \
          --disable-encoder=libmp3lame \
          --disable-encoder=vp* \
          --disable-decoder=av1* \
          --disable-decoder=hevc* \
          --disable-decoder=adpcm* \
          --disable-decoder=mp3* \
          --disable-decoder=vp* \
          --enable-small
        PATH="$HOME/bin:$PATH" make -j$(nproc)
        make install
        hash -r

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "pip"  # caching pip dependencies

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install -r requirements.txt
        python3 -m pip install pyinstaller rich shellingham

    - name: Create Executable with Pyinstaller
      run: |
        pyinstaller \
          --distpath ./.dist \
          --workpath ./.build \
          --name tidal-wave_linux \
          --paths tidal_wave \
          --add-data "README.md:." \
          --add-binary "${HOME}/bin/ffmpeg:." \
          --clean \
          --noupx \
          --onefile \
          --strip \
          ./pyinstall.py 
    
    - name: Test just-compiled binary
      run: |
        ./.dist/tidal-wave_linux --help

    - name: Add (upload) artifact to release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        files: ./.dist/tidal-wave_linux
