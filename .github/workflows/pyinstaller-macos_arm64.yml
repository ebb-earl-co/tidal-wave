name: Pyinstaller Build on macOS for macOS arm64
on:
  release:
    types: ["published"]
  push:
    branches: ["develop", "trunk"]

permissions:
  contents: write

jobs:
  build:
    runs-on: flyci-macos-large-latest-m1

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Update Homebrew
        id: update-homebrew
        continue-on-error: true
        run: |
          brew update --preinstall

      - name: Get FFmpeg dependencies from Homebrew
        id: brew-install-ffmpeg-deps
        run: brew install automake libtool nasm shtool xvid

      - name: Clone FFmpeg, n6.1.1 tag
        id: clone-ffmpeg-from-github
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg-n6.1.1
          ref: n6.1.1
          fetch-depth: 1

      - name: Cache compiled ffmpeg
        uses: actions/cache@v4
        id: cache-ffmpeg-darwin-arm64
        with:
          path: ffmpeg-n6.1.1/ffmpeg
          key: macos-arm64-compiled-ffmpeg-n6.1.1

      - name: Build FFmpeg from source
        if: steps.cache-ffmpeg-darwin-arm64.outputs.cache-hit != 'true'
        id: compile-ffmpeg
        run: |
          cd ffmpeg-n6.1.1
          ./configure \
            --arch=arm64 \
            --target-os=darwin \
            --pkg-config-flags="--static" \
            --extra-cflags="-march=native" \
            --extra-ldflags="-arch arm64" \
            --ld="g++" \
            --disable-everything \
            --disable-doc \
            --disable-htmlpages \
            --disable-podpages \
            --disable-txtpages \
            --disable-network \
            --disable-autodetect \
            --disable-hwaccels \
            --disable-ffprobe \
            --disable-ffplay \
            --enable-neon \
            --enable-bsf=aac_adtstoasc,extract_extradata,h264_metadata,mpeg2_metadata \
            --enable-decoder=aac,flac,h264,mjpeg \
            --enable-demuxer=aac,eac3,flac,h264,image2,mov,mpegts \
            --enable-encoder=aac,flac,h264,mjpeg \
            --enable-filter=copy \
            --enable-muxer=eac3,flac,h264,mjpeg,mpegts,mp4 \
            --enable-parser=aac,h264 \
            --enable-protocol=file \
            --enable-small
          make -j$(sysctl -n hw.logicalcpu)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip pyinstaller setuptools wheel
          python3 -m pip install -r requirements.txt

      - name: Create Executable with Pyinstaller
        run: |
          pyinstaller \
            --name=tidal-wave_py311_FFmpeg611_macos_arm64 \
            --target-arch=arm64 \
            --paths tidal_wave \
            --add-data "README.md:." \
            --add-binary "ffmpeg-n6.1.1/ffmpeg:." \
            --clean \
            --noupx \
            --onefile \
            --strip \
            ./pyinstaller.py

      - name: Test just-compiled binary
        run: |
          ./dist/tidal-wave_py311_FFmpeg611_macos_arm64 --help

      - name: Add artifact to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ github.token }}
          fail_on_unmatched_files: true
          files: ./dist/tidal-wave_py311_FFmpeg611_macos_arm64
