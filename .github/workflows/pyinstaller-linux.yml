name: Pyinstaller Build on Ubuntu 22.04 for GNU/Linux x86_64
on:
  release:
    types: ["published"]
  push:
    branches: ["138-standardize-github-actions-around-pyinstaller", "develop", "trunk"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          version: 1.0
          packages: g++ gcc git make pkg-config yasm

      - name: Cache FFmpeg n6.1.1 in /opt
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/ffmpeg-n6.1.1
          key: ffmpeg-${{ hashFiles('ffmpeg-n6.1.1') }}

      - name: Clone FFmpeg, n6.1.1 tag
        if: ${{ steps.cache-ffmpeg.outputs.cache-hit != 'true' }}
        id: clone-ffmpeg-from-github
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          path: /opt/ffmpeg-n6.1.1
          ref: n6.1.1
          fetch-depth: 1

      - name: Build FFmpeg from source (git submodule)
        run: |
          cd ffmpeg-n6.1.1
          ./configure \
            --arch=x86_64 \
            --pkg-config-flags="--static" \
            --extra-cflags="-march=native" \
            --extra-libs="-lpthread -lm" \
            --ld="g++" \
            --disable-everything \
            --disable-shared \
            --disable-doc \
            --disable-htmlpages \
            --disable-podpages \
            --disable-txtpages \
            --disable-network \
            --disable-autodetect \
            --disable-hwaccels \
            --disable-ffprobe \
            --disable-ffplay \
            --enable-bsf=aac_adtstoasc,extract_extradata,h264_metadata,mpeg2_metadata \
            --enable-decoder=flac,mjpeg \
            --enable-demuxer=aac,eac3,flac,image2,mov,mpegts \
            --enable-encoder=flac,mjpeg \
            --enable-filter=copy \
            --enable-muxer=eac3,flac,mjpeg,mpegts,mp4 \
            --enable-parser=aac,h264 \
            --enable-protocol=file \
            --enable-small
          make -j$(nproc)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          architecture: "x64"
          cache: "pip"
          check-latest: true
          python-version: "3.11.8"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip pyinstaller setuptools wheel
          python3 -m pip install -r requirements.txt

      - name: Create Executable with Pyinstaller
        run: |
          pyinstaller \
            --name tidal-wave_py311_FFmpeg611_linux \
            --paths tidal_wave \
            --add-data "README.md:." \
            --add-binary "./ffmpeg-n6.1.1/ffmpeg:." \
            --clean \
            --noupx \
            --onefile \
            --strip \
            ./pyinstaller.py

      - name: Test just-compiled binary
        run: |
          chmod +x ./.dist/tidal-wave_py311_FFmpeg611_linux
          ./dist/tidal-wave_py311_FFmpeg611_linux --help

      - name: Add artifact to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ github.token }}
          fail_on_unmatched_files: true
          files: ./.dist/tidal-wave_py311_FFmpeg611_linux
