name: Pyinstaller Build for Windows 64-bit on windows-latest
on:
  release:
    types: ["published"]
  push:
    branches: ["develop", "trunk"]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            git
            mingw-w64-ucrt-x86_64-autotools
            mingw-w64-ucrt-x86_64-cc
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-dlfcn 

      - uses: actions/checkout@v4

      - name: Clone FFmpeg, n6.1.1 tag
        id: clone-ffmpeg-from-github
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg-n6.1.1
          ref: n6.1.1
          fetch-depth: 1

      - name: Cache cross-compiled ffmpeg.exe
        uses: actions/cache@v4
        id: cache-ffmpeg-exe
        with:
          path: ffmpeg-n6.1.1/ffmpeg.exe
          key: cross-compiled-ffmpeg-n6.1.1

      - name: Build FFmpeg from source
        if: steps.cache-ffmpeg-exe.outputs.cache-hit != 'true'
        run: |
          cd ffmpeg-n6.1.1
          .ffmpeg-n6.1.1\configure \
            --arch=x86_64 \
            --cross-prefix=x86_64-w64-mingw32- \
            --target-os=mingw32 \
            --pkg-config-flags=--static \
            --disable-everything \
            --disable-debug \
            --disable-stripping \
            --disable-shared \
            --disable-doc \
            --disable-htmlpages \
            --disable-podpages \
            --disable-txtpages \
            --disable-network \
            --disable-autodetect \
            --disable-hwaccels \
            --disable-ffprobe \
            --disable-ffplay \
            --enable-static \
            --enable-bsf=aac_adtstoasc,extract_extradata,h264_metadata,mpeg2_metadata \
            --enable-decoder=aac,flac,h264,mjpeg \
            --enable-demuxer=aac,eac3,flac,h264,image2,mov,mpegts \
            --enable-encoder=aac,flac,h264,mjpeg \
            --enable-filter=copy \
            --enable-muxer=eac3,flac,h264,mjpeg,mpegts,mp4 \
            --enable-parser=aac,h264 \
            --enable-protocol=file \
          make

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"
          cache: "pip" # caching pip dependencies

      - name: Install Python dependencies
        run: |
          python.exe -m pip install --upgrade pip setuptools wheel
          python.exe -m pip install -r requirements.txt
          python.exe -m pip install pyinstaller rich shellingham

      - name: Cache UPX 4.2.3 zip downloaded from GitHub
        uses: actions/cache@v4
        id: cache-upx-423
        with:
          path: ~\AppData\Local\upx-4.2.3-win64.zip
          key: upx-423-from-github

      - name: Download UPX binary if not found
        if: steps.cache-upx-423.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Invoke-WebRequest "https://github.com/upx/upx/releases/download/v4.2.3/upx-4.2.3-win64.zip" -OutFile "~\AppData\Local\upx-4.2.3-win64.zip"
          
      - name: Install UPX tool
        shell: pwsh
        run: |
          Expand-Archive "~\AppData\Local\upx-4.2.3-win64.zip" -DestinationPath "~\AppData\Local\upx-4.2.3-win64"

      - name: Create Executable with Pyinstaller
        run: |
          pyinstaller `
            --name tidal-wave_py3.11_FFmpeg6.1.1_windows.exe `
            --paths tidal_wave `
            --add-data "README.md:." `
            --add-binary "ffmpeg-n6.1.1\\ffmpeg.exe:." `
            --clean `
            --upx-dir ~\AppData\Local\upx-4.2.3-win64 `
            --onefile `
            .\pyinstaller.py

      - name: Test just-compiled binary
        shell: pwsh
        run: |
          & ".\dist\tidal-wave_py3.11_FFmpeg6.1.1_windows.exe --help"

      - name: Add artifact to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ github.token }}
          fail_on_unmatched_files: true
          files: ./.dist/tidal-wave_py3.11_FFmpeg6.1.1_windows.exe
