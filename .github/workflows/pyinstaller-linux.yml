name: Pyinstaller Build on Ubuntu 22.04 for GNU/Linux x86_64
on:
  release:
    types: ["published"]
  push:
    branches: ["develop", "trunk"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          version: 1.0
          packages: build-essential ca-certificates git pkg-config yasm

      - name: Clone FFmpeg, n6.1.1 tag
        id: clone-ffmpeg-from-github
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg-n6.1.1
          ref: n6.1.1
          fetch-depth: 1

      - name: Build FFmpeg from source (git submodule)
        run: |
          cd ffmpeg-n6.1.1
          ./configure \
              --prefix="/usr/local/" \
              --pkg-config-flags="--static" \
              --extra-cflags="-march=native" \
              --extra-cflags="-I/usr/local/include" \
              --extra-ldflags="-L/usr/local/lib" \
              --extra-libs="-lpthread -lm" \
              --ld="g++" \
              --bindir="/usr/local/bin" \
              --disable-everything \
              --disable-doc \
              --disable-htmlpages \
              --disable-podpages \
              --disable-txtpages \
              --disable-network \
              --disable-autodetect \
              --disable-hwaccels \
              --disable-ffprobe \
              --disable-ffplay \
              --enable-bsf=aac_adtstoasc,extract_extradata,h264_metadata,mpeg2_metadata \
              --enable-decoder=aac,flac,h264,mjpeg \
              --enable-demuxer=aac,eac3,flac,h264,image2,mov,mpegts \
              --enable-encoder=aac,flac,h264,mjpeg \
              --enable-filter=copy \
              --enable-muxer=eac3,flac,h264,mjpeg,mpegts,mp4 \
              --enable-parser=aac,h264 \
              --enable-protocol=file \
              --enable-small \
              && make -j$(nproc) && make install && hash -r

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller rich shellingham

      - name: Create Executable with Pyinstaller
        run: |
          pyinstaller \
            --distpath ./.dist \
            --workpath ./.build \
            --name tidal-wave_py311_FFmpeg6.1.1_linux \
            --paths tidal_wave \
            --add-data "README.md:." \
            --add-binary "usr/local/bin/ffmpeg:." \
            --clean \
            --noupx \
            --onefile \
            --strip \
            ./pyinstaller.py

      - name: Test just-compiled binary
        run: |
          chmod +x ./.dist/tidal-wave_py311_FFmpeg6.1.1_linux
          ./.dist/tidal-wave_py311_FFmpeg6.1.1_linux --help

      - name: Add artifact to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ github.token }}
          fail_on_unmatched_files: true
          files: ./.dist/tidal-wave_py311_FFmpeg6.1.1_linux
